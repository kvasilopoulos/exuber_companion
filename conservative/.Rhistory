load("H:/My Desktop/shenzen_cross_listed.xlsx")
help(excel)
help(importexcel)
??importexcel
002594 CH Equity
1211 HK Equity
000039 CH Equity
2039 HK Equity
000002 CH Equity
2202 HK Equity
002672 CH Equity
895 HK Equity
000776 CH Equity
1776 HK Equity
921 HK Equity
000921 CH Equity
000513 CH Equity
1513 HK Equity
000585 CH Equity
42 HK Equity
000898 CH Equity
347 HK Equity
000488 CH Equity
1812 HK Equity
002490 CH Equity
568 HK Equity
000756 CH Equity
719 HK Equity
000338 CH Equity
2338 HK Equity
002202 CH Equity
2208 HK Equity
000063 CH Equity
763 HK Equity
002703 CH Equity
1057 HK Equity
000157 CH Equity
1157 HK Equity
c<-c(002594 CH Equity
1211 HK Equity
000039 CH Equity
2039 HK Equity
000002 CH Equity
2202 HK Equity
002672 CH Equity
895 HK Equity
000776 CH Equity
1776 HK Equity
921 HK Equity
000921 CH Equity
000513 CH Equity
1513 HK Equity
000585 CH Equity
42 HK Equity
000898 CH Equity
347 HK Equity
000488 CH Equity
1812 HK Equity
002490 CH Equity
568 HK Equity
000756 CH Equity
719 HK Equity
000338 CH Equity
2338 HK Equity
002202 CH Equity
2208 HK Equity
000063 CH Equity
763 HK Equity
002703 CH Equity
1057 HK Equity
000157 CH Equity
1157 HK Equity
)
setwd(
H:\My Desktop
)
setwd(
"H:\My Desktop")
read.xlsx("shenzen.xlsx",sheetIndex=1)
install.packages("xlsx")
library(xlsx)
library("xlsx")
??xlsx
??xlsx2
??xls
??xl
shenzen <- read.csv("H:/My Desktop/shenzen.csv")
View(shenzen)
library(ggplot2)
ggplot() +
geom_rect(data=data.frame(xmin=decimal_date(as.Date(c("1924-01-01"))),
xmax=decimal_date(as.Date(c("1928-12-31"))),
ymin=-Inf,
ymax=Inf),
aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),
fill="grey",alpha=0.5) +
geom_line(data=a_series_df,aes(month,big),color="blue") +
theme_classic()
library(ggplot2)
plot(c(100, 200), c(300, 450), type= "n", xlab = "", ylab = "")
rect(100, 300, 125, 350) # transparent
rect(100, 400, 125, 450, col = "green", border = "blue") # coloured
rect(115, 375, 150, 425, col = par("bg"), border = "transparent")
rect(150, 300, 175, 350, density = 10, border = "red")
rect(150, 400, 175, 450, density = 30, col = "blue",
angle = -30, border = "transparent")
plot(c(100, 200), c(300, 450), type= "n", xlab = "", ylab = "")
rect(100, 300) # transparent
rect(100, 400, col = "green", border = "blue") # coloured
rect(115, 375, col = par("bg"), border = "transparent")
rect(150, 300, density = 10, border = "red")
rect(150, 400, 175, 450, density = 30, col = "blue",
angle = -30, border = "transparent")
??wild.boot
?grep
setwd("\\lancs\homes\11\vasilopo\My Desktop\exuber_companion")
setwd("\D:")
setwd("D:\")
setwd("D:\")
setwd("D:")
getwd()
getwd("")
getwd()
setwd("D://exuber_companion")
library(exuber)
options(exuber.show_progress = FALSE)
mc_con <- vector("list", length = 2000)
source('D:/exuber_companion/simulate_cv.R')
setwd("D://exuber_companion")
library(exuber)
options(exuber.show_progress = FALSE)
mc_con <- vector("list", length = 2000)
for(i in 6:1000) {
mc_con[[i]] <- exuber::mc_cv(i, opt_bsadf = "conservative")
print(i)
}
warnings()
closeAllConnections()
closeAllConnections()
saveRDS(mc_con, "mc_con.Rds")
str(mc_con.1)
str(mc_con,11)
mc_con[[1]]
mc_con[[10]]
mc_con <- readRDS("D:/exuber_companion/mc_con.Rds")
mc_con
str(mc_con,1)
str(mc_con,0)
length(mc_con)
mc_con[[1]]
mc_con[[1000]]
mc_con[[999]]
mc_con[[990]]
mc_con[[970]]
mc_con[[950]]
mc_con[[959]]
mc_con[[969]]
mc_con[[963]]
mc_con[[961]]
mc_con[[960]]
mc_con[[959]]
#'@export
#'@importFrom tibble enframe
print.crit <- function(x, ...) {
# we dont want to overwhelm the console
print(tibble::enframe(x))
}
# names(mc_con) <- c(paste0("_nan", 1:5), c(paste0("n", 6:nn)))
class(mc_con) <- c("list", "crit")
mc_con
mc_con[[960]]
mc_con[[959]]
for(i in 960:2000) {
mc_con[[i]] <- exuber::mc_cv(i, opt_bsadf = "conservative")
print(i)
}
saveRDS(mc_con, "mc_con.Rds")
usethis::use_data(crit, overwrite = TRUE, compress = "xz")
usethis::use_data
save.image("D:/exuber_companion/crit.RData")
